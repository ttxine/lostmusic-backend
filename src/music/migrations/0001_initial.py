# Generated by Django 3.2.9 on 2021-12-01 16:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import src.base.services


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название альбома')),
                ('cover_large', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='JPEG', keep_meta=True, quality=90, size=[250, 250], upload_to=src.base.services.get_cover_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png']), src.base.services.validate_file_size], verbose_name='Обложка большая')),
                ('cover_small', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='JPEG', keep_meta=True, quality=90, size=[100, 100], upload_to=src.base.services.get_cover_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png']), src.base.services.validate_file_size], verbose_name='Обложка малая')),
                ('release_date', models.DateTimeField(verbose_name='Дата релиза')),
                ('album_type', models.CharField(choices=[('a', 'Альбом'), ('s', 'Сингл')], max_length=1, verbose_name='Тип альбома')),
                ('artists', models.ManyToManyField(related_name='albums', to=settings.AUTH_USER_MODEL, verbose_name='Исполнители')),
                ('featuring', models.ManyToManyField(related_name='albums_featuring', to=settings.AUTH_USER_MODEL, verbose_name='С участием')),
            ],
            options={
                'verbose_name': 'Альбом',
                'verbose_name_plural': 'Альбомы',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название жанра')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('duration', models.DurationField(verbose_name='Длительность')),
                ('explicit', models.BooleanField(verbose_name='Explicit')),
                ('playable', models.BooleanField(default=True, verbose_name='Доступен для прослушивания')),
                ('text', models.TextField(blank=True, verbose_name='Текст трека')),
                ('file', models.FileField(upload_to=src.base.services.get_track_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav']), src.base.services.validate_file_size], verbose_name='Файл трека')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album', verbose_name='Альбом')),
                ('artists', models.ManyToManyField(related_name='tracks', to=settings.AUTH_USER_MODEL, verbose_name='Исполнители')),
                ('featuring', models.ManyToManyField(related_name='tracks_featuring', to=settings.AUTH_USER_MODEL, verbose_name='С участием')),
            ],
            options={
                'verbose_name': 'Трек',
                'verbose_name_plural': 'Треки',
            },
        ),
        migrations.AddField(
            model_name='album',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.genre', verbose_name='Жанр'),
        ),
    ]
